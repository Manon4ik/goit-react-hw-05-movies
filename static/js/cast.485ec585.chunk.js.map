{"version":3,"file":"static/js/cast.485ec585.chunk.js","mappings":"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","sources":["api/api.js","components/Cast.js","components/Loader.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/'\nconst API_KEY = '?api_key=164eadb7baae3a4c5cb507a1aca52aae';\n\n//?api_key=${API_KEY}`\n\n//993710?api_key=164eadb7baae3a4c5cb507a1aca52aae\n//420818?api_key=164eadb7baae3a4c5cb507a1aca52aae\n\n//https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n//https://api.themoviedb.org/3/trending/movie/{time_window}\n\nconst fetchTranding = async () => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day${API_KEY}`)\n    //console.log('reso: ',response);\n    return response\n}\n\nconst fetchMovie = async (movie_id = '') => {\n\n    const response = await axios.get(`${BASE_URL + movie_id}${API_KEY}`)\n\n    return response\n\n}\n\n\nconst fetchReviews = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/reviews${API_KEY}`)\n\n    //console.log('resp: ', response?.data);\n\n    return response\n}\nconst fetchCasts = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/credits${API_KEY}`)\n    //console.log('resp: ', response?.data);\n\n    return response\n}\n\nconst fetchMovieSearch = async (query) => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie${API_KEY}&query=${query}`)\n\n    //console.log('resp:',response);\n    return response\n}\n\n\nconst api = { fetchTranding, fetchMovie, fetchReviews, fetchCasts, fetchMovieSearch }\n\nexport default api","\n// https://api.themoviedb.org/3/movie/993710/credits?api_key=164eadb7baae3a4c5cb507a1aca52aae\n//import data from '../credits_993710.json'\n//console.log('cast: ',data.cast);\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useState, useEffect } from \"react\"\nimport api from \"api/api\"\n\nimport Loader from 'components/Loader';\n\nconst secure_base_url = 'https://image.tmdb.org/t/p/w92'\n\n\n\n\nexport default function Cast() {\n\n    const { movieId } = useParams()\n\n    const { fetchCasts } = api\n\n    const [casts, setCasts] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        const getCasts = async () => {\n            try {\n                const { data } = await fetchCasts(movieId)\n                setCasts(data?.cast || [])\n            } catch (error) {\n                setError(error.message || \"Something went wrong.\")\n            }finally{\n                setIsLoading(false)\n            }\n        }\n\n        getCasts()\n\n    }, [movieId, fetchCasts])\n\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n            {isLoading ? <Loader /> :\n            Array.isArray(casts) && casts.length > 0 ? (\n                <ul>\n                    {casts.map(({ id, profile_path, name, character }) => (\n                        <li key={id}>\n                            {profile_path &&\n                                <img src={secure_base_url + profile_path} alt={name} loading=\"lazy\" />\n                            }\n                            <p>{name}</p>\n                            <p>Character: {character}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No information yet...</p>\n            )}\n        </div>\n    )\n}","export default function Loading(){\n    return(\n        <p>Loading ...</p>\n    )\n}"],"names":["BASE_URL","API_KEY","fetchTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchMovie","_ref2","_callee2","movie_id","_args2","_context2","length","undefined","fetchReviews","_ref3","_callee3","_args3","_context3","fetchCasts","_ref4","_callee4","_args4","_context4","fetchMovieSearch","_ref5","_callee5","query","_context5","_x","api","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","casts","setCasts","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","getCasts","_yield$fetchCasts","data","cast","t0","message","finish","_jsxs","children","_jsx","Loader","Array","isArray","map","id","profile_path","name","character","src","alt","loading","Loading"],"sourceRoot":""}