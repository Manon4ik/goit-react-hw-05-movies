{"version":3,"file":"static/js/movieDetails.bf6ff2c3.chunk.js","mappings":"6KACMA,EAAW,sCACXC,EAAU,4CAWVC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEKC,EAAAA,EAAAA,IAAU,kDAADC,OAAmDX,IAAU,OAA/E,OAARM,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAEPP,GAAQ,wBAAAC,EAAAO,OAAA,GAAAT,EAAA,KAClB,kBALkB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAObC,EAAU,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,IAAA,IAAAC,EAAAd,EAAAe,EAAAL,UAAA,OAAAZ,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAAoB,OAAbW,EAAQC,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAb,KAAA,EAEZC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,GAAQT,OAAGX,IAAU,OAAtD,OAARM,EAAQgB,EAAAV,KAAAU,EAAAT,OAAA,SAEPP,GAAQ,wBAAAgB,EAAAR,OAAA,GAAAK,EAAA,KAElB,kBANe,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KASVS,EAAY,eAAAC,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuB,IAAA,IAAAP,EAAAd,EAAAsB,EAAAZ,UAAA,OAAAZ,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAAoB,OAAbW,EAAQQ,EAAAL,OAAA,QAAAC,IAAAI,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAApB,KAAA,EACdC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,EAAQ,YAAAT,OAAWX,IAAU,OAA9D,OAARM,EAAQuB,EAAAjB,KAAAiB,EAAAhB,OAAA,SAIPP,GAAQ,wBAAAuB,EAAAf,OAAA,GAAAa,EAAA,KAClB,kBANiB,OAAAD,EAAAX,MAAA,KAAAC,UAAA,KAOZc,EAAU,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,IAAA,IAAAZ,EAAAd,EAAA2B,EAAAjB,UAAA,OAAAZ,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAAoB,OAAbW,EAAQa,EAAAV,OAAA,QAAAC,IAAAS,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAzB,KAAA,EACZC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,EAAQ,YAAAT,OAAWX,IAAU,OAA9D,OAARM,EAAQ4B,EAAAtB,KAAAsB,EAAArB,OAAA,SAGPP,GAAQ,wBAAA4B,EAAApB,OAAA,GAAAkB,EAAA,KAClB,kBALe,OAAAD,EAAAhB,MAAA,KAAAC,UAAA,KAOVmB,EAAgB,eAAAC,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiC,EAAOC,GAAK,IAAAhC,EAAA,OAAAF,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAEVC,EAAAA,EAAAA,IAAU,4CAADC,OAA6CX,EAAO,WAAAW,OAAU2B,IAAQ,OAAxF,OAARhC,EAAQiC,EAAA3B,KAAA2B,EAAA1B,OAAA,SAGPP,GAAQ,wBAAAiC,EAAAzB,OAAA,GAAAuB,EAAA,KAClB,gBANqBG,GAAA,OAAAJ,EAAArB,MAAA,KAAAC,UAAA,KAShByB,EAAM,CAAExC,cAAAA,EAAegB,WAAAA,EAAYQ,aAAAA,EAAcK,WAAAA,EAAYK,iBAAAA,GAEnE,K,mECtDe,SAASO,IACpB,OACIC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAEX,C,+ICDe,SAASC,IAAS,IAADC,EAEtBC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,oBAAqBH,GAGjC,IAAMI,GAAYC,EAAAA,EAAAA,QAAqB,QAAfN,EAACC,EAASM,aAAK,IAAAP,OAAA,EAAdA,EAAgBQ,MACnCC,GAAWC,EAAAA,EAAAA,MAMjB,OACIb,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASC,QANV,SAAAC,GAChBJ,EAASJ,EAAUS,QAAS,CAAEC,SAAS,GAC3C,EAImDjB,SAAC,aAGxD,CCrBe,SAASkB,EAAK5D,GAAa,IAAV6D,EAAK7D,EAAL6D,MAGrBC,EAAoFD,EAApFC,YAAaC,EAAuEF,EAAvEE,eAAgBC,EAAuDH,EAAvDG,aAAcC,EAAyCJ,EAAzCI,MAAOC,EAAkCL,EAAlCK,SAAUC,EAAwBN,EAAxBM,OAAQC,EAAgBP,EAAhBO,aAGrEC,EAA2B,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcE,MAAM,KAAK,GAE9C,OACIC,EAAAA,EAAAA,MAAA,WAASC,UAAU,QAAO9B,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,aAAY9B,UACvBD,EAAAA,EAAAA,KAAA,OAAKgC,IANO,kCAMgBX,EAAaY,IAAKX,OAElDQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAW9B,SAAA,EACtB6B,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,CAAKuB,GAAS,gBAAgB,KAAGI,GAAgB,MAAM,QACvDE,EAAAA,EAAAA,MAAA,KAAA7B,SAAA,CAAG,eAA4B,GAAfsB,EAAkB,QAClCvB,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACHwB,IAAYzB,EAAAA,EAAAA,KAAA,KAAAC,SAAIwB,KACjBzB,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,KAAAC,SACKiC,MAAMC,QAAQT,IAAWA,EAAO9C,OAAS,GAAM8C,EAAOU,KAAI,SAACC,EAAOC,GAAK,OACpER,EAAAA,EAAAA,MAAA,QAAA7B,SAAA,CAAmBoC,EAAME,KAAK,MAAnBD,EAA2B,WAO9D,CC3Be,SAASE,IAEpB,OACIV,EAAAA,EAAAA,MAAA,WAAA7B,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,4BACJ6B,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,OAAMzC,SAAC,YACpBD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,UAASzC,SAAC,kBAE3BD,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,MAGnB,C,aCJe,SAASC,IAEpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACAvE,EAAewB,EAAAA,EAAAA,WAEvBiD,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC3B,EAAK6B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBrD,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,uBAAwBH,GAEpC,IAAAwD,GAAuBC,EAAAA,EAAAA,MACjBC,GADkCZ,EAAAA,EAAAA,GAAAU,EAAA,GAArB,GACUG,IAAI,WAuBjC,OAtBAzD,QAAQC,IAAI,sBAAuBuD,IAGnCE,EAAAA,EAAAA,YAAU,WAENL,GAAa,GAEb,IAAMM,EAAQ,eAAA1G,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAwG,EAAAC,EAAA,OAAA1G,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcQ,EAAWuE,GAAQ,OAAAqB,EAAAtG,EAAAK,KAAlCkG,EAAID,EAAJC,KACRhB,EAASgB,GAAQ,IAAGvG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAwG,GAAAxG,EAAA,SAEpB2F,EAAS3F,EAAAwG,GAAMC,SAAW,yBAAwB,QAE/B,OAF+BzG,EAAAC,KAAA,GAElD8F,GAAa,GAAM/F,EAAA0G,OAAA,6BAAA1G,EAAAO,OAAA,GAAAT,EAAA,wBAE1B,kBATa,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWd4F,GAEJ,GAAG,CAACpB,EAASvE,IAETgF,GAAcxB,EAAAA,EAAAA,MAAA,KAAA7B,SAAA,CAAG,UAAQqD,KAExBlC,GAKDpB,EAAAA,EAAAA,KAAA,QAAAC,SACKyD,GACG1D,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,KAEPzC,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvE,SAAA,EACID,EAAAA,EAAAA,KAACE,EAAM,KACPF,EAAAA,EAAAA,KAACmB,EAAK,CAACC,MAAOA,KACdpB,EAAAA,EAAAA,KAACwC,EAAc,cAZ/B,CAiBJ,C","sources":["api/api.js","components/Loader.js","components/GoBack.js","components/Movie.js","components/AdditionalInfo.js","pages/MovieDetails.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/'\nconst API_KEY = '?api_key=164eadb7baae3a4c5cb507a1aca52aae';\n\n//?api_key=${API_KEY}`\n\n//993710?api_key=164eadb7baae3a4c5cb507a1aca52aae\n//420818?api_key=164eadb7baae3a4c5cb507a1aca52aae\n\n//https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n//https://api.themoviedb.org/3/trending/movie/{time_window}\n\nconst fetchTranding = async () => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day${API_KEY}`)\n    //console.log('reso: ',response);\n    return response\n}\n\nconst fetchMovie = async (movie_id = '') => {\n\n    const response = await axios.get(`${BASE_URL + movie_id}${API_KEY}`)\n\n    return response\n\n}\n\n\nconst fetchReviews = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/reviews${API_KEY}`)\n\n    //console.log('resp: ', response?.data);\n\n    return response\n}\nconst fetchCasts = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/credits${API_KEY}`)\n    //console.log('resp: ', response?.data);\n\n    return response\n}\n\nconst fetchMovieSearch = async (query) => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie${API_KEY}&query=${query}`)\n\n    //console.log('resp:',response);\n    return response\n}\n\n\nconst api = { fetchTranding, fetchMovie, fetchReviews, fetchCasts, fetchMovieSearch }\n\nexport default api","export default function Loading(){\n    return(\n        <p>Loading ...</p>\n    )\n}","import { useRef } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nexport default function GoBack(){\n\n    const location = useLocation()\n    console.log('location go back:', location);\n    \n\n    const goBackUrl = useRef(location.state?.from);\n    const navigate = useNavigate()\n\n    const handleClick = evt => {\n        navigate(goBackUrl.current, { replace: false })\n    }\n\n    return (\n        <nav>\n            <button type=\"button\" onClick={handleClick}>Go back</button>\n        </nav>\n    )\n}","export default function Movie({ movie }) {\n\n    //console.log(movie);\n    const {poster_path, original_title, vote_average, title, overview, genres, release_date} = movie\n\n    const secure_base_url = 'https://image.tmdb.org/t/p/w300'\n    const release_year = release_date?.split(\"-\")[0];\n\n    return (\n        <section className=\"movie\">\n            <div className=\"movieImage\">\n                <img src={secure_base_url + poster_path} alt={original_title} />\n            </div>\n            <div className=\"movieInfo\">\n                <h1>{title || \"Unknown Title\"} ({release_year || \"N/A\"})</h1>\n                <p>User score: {vote_average * 10}%</p>\n                <h2>Overview</h2>\n                {overview && <p>{overview}</p>}\n                <h3>Genres</h3>\n                <p>\n                    {Array.isArray(genres) && genres.length > 0 && (genres.map((genre, index) => (\n                        <span key={index}>{genre.name} </span>\n                    )))}\n                </p>\n            </div>\n        </section>\n    )\n\n}","import { Link, Outlet } from \"react-router-dom\"\nexport default function AdditionalInfo() {\n\n    return (\n        <section>\n            <h4>Additional information</h4>\n            <ul>\n                <li><Link to=\"cast\">Cast</Link></li>\n                <li><Link to=\"reviews\">Reviews</Link></li>\n            </ul>\n            <Outlet />\n        </section>\n    )\n}","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, useSearchParams } from 'react-router-dom';\nimport api from 'api/api';\n\nimport GoBack from \"components/GoBack\";\nimport Movie from 'components/Movie';\nimport AdditionalInfo from \"components/AdditionalInfo\";\nimport Loader from 'components/Loader';\n\nexport default function MovieDetails() {\n\n    const { movieId } = useParams()\n    const { fetchMovie } = api\n\n    const [movie, setMovie] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n    const location = useLocation()\n    console.log('location on single: ', location);\n\n    const [searchParams] = useSearchParams();\n    const request = searchParams.get('request');\n    console.log('request on Movies: ', request);\n\n\n    useEffect(() => {\n\n        setIsLoading(true)\n\n        const getMovie = async () => {\n            try {\n                const { data } = await fetchMovie(movieId)\n                setMovie(data || [])\n            } catch (error) {\n                setError(error.message || \"Something went wrong.\")\n            } finally {\n                setIsLoading(false)\n            }\n        }\n\n        getMovie()\n\n    }, [movieId, fetchMovie])\n\n    if (error) return <p>Error: {error}</p>;\n\n    if (!movie) {\n        return\n    }\n\n    return (\n        <main>\n            {isLoading ?\n                <Loader />\n                :\n                <>\n                    <GoBack />\n                    <Movie movie={movie} />\n                    <AdditionalInfo />\n                </>\n            }\n        </main>\n    )\n}"],"names":["BASE_URL","API_KEY","fetchTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchMovie","_ref2","_callee2","movie_id","_args2","_context2","length","undefined","fetchReviews","_ref3","_callee3","_args3","_context3","fetchCasts","_ref4","_callee4","_args4","_context4","fetchMovieSearch","_ref5","_callee5","query","_context5","_x","api","Loading","_jsx","children","GoBack","_location$state","location","useLocation","console","log","goBackUrl","useRef","state","from","navigate","useNavigate","type","onClick","evt","current","replace","Movie","movie","poster_path","original_title","vote_average","title","overview","genres","release_date","release_year","split","_jsxs","className","src","alt","Array","isArray","map","genre","index","name","AdditionalInfo","Link","to","Outlet","MovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useSearchParams","useSearchParams","request","get","useEffect","getMovie","_yield$fetchMovie","data","t0","message","finish","Loader","_Fragment"],"sourceRoot":""}