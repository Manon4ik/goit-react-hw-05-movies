{"version":3,"file":"static/js/movies.01718a38.chunk.js","mappings":"6KACMA,EAAW,sCACXC,EAAU,4CAWVC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEKC,EAAAA,EAAAA,IAAU,kDAADC,OAAmDX,IAAU,OAA/E,OAARM,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAEPP,GAAQ,wBAAAC,EAAAO,OAAA,GAAAT,EAAA,KAClB,kBALkB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAObC,EAAU,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,IAAA,IAAAC,EAAAd,EAAAe,EAAAL,UAAA,OAAAZ,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAAoB,OAAbW,EAAQC,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAb,KAAA,EAEZC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,GAAQT,OAAGX,IAAU,OAAtD,OAARM,EAAQgB,EAAAV,KAAAU,EAAAT,OAAA,SAEPP,GAAQ,wBAAAgB,EAAAR,OAAA,GAAAK,EAAA,KAElB,kBANe,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KASVS,EAAY,eAAAC,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuB,IAAA,IAAAP,EAAAd,EAAAsB,EAAAZ,UAAA,OAAAZ,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAAoB,OAAbW,EAAQQ,EAAAL,OAAA,QAAAC,IAAAI,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAApB,KAAA,EACdC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,EAAQ,YAAAT,OAAWX,IAAU,OAA9D,OAARM,EAAQuB,EAAAjB,KAAAiB,EAAAhB,OAAA,SAIPP,GAAQ,wBAAAuB,EAAAf,OAAA,GAAAa,EAAA,KAClB,kBANiB,OAAAD,EAAAX,MAAA,KAAAC,UAAA,KAOZc,EAAU,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,IAAA,IAAAZ,EAAAd,EAAA2B,EAAAjB,UAAA,OAAAZ,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAAoB,OAAbW,EAAQa,EAAAV,OAAA,QAAAC,IAAAS,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAzB,KAAA,EACZC,EAAAA,EAAAA,IAAU,GAADC,OAAIZ,EAAWqB,EAAQ,YAAAT,OAAWX,IAAU,OAA9D,OAARM,EAAQ4B,EAAAtB,KAAAsB,EAAArB,OAAA,SAGPP,GAAQ,wBAAA4B,EAAApB,OAAA,GAAAkB,EAAA,KAClB,kBALe,OAAAD,EAAAhB,MAAA,KAAAC,UAAA,KAOVmB,EAAgB,eAAAC,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiC,EAAOC,GAAK,IAAAhC,EAAA,OAAAF,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAEVC,EAAAA,EAAAA,IAAU,4CAADC,OAA6CX,EAAO,WAAAW,OAAU2B,IAAQ,OAAxF,OAARhC,EAAQiC,EAAA3B,KAAA2B,EAAA1B,OAAA,SAGPP,GAAQ,wBAAAiC,EAAAzB,OAAA,GAAAuB,EAAA,KAClB,gBANqBG,GAAA,OAAAJ,EAAArB,MAAA,KAAAC,UAAA,KAShByB,EAAM,CAAExC,cAAAA,EAAegB,WAAAA,EAAYQ,aAAAA,EAAcK,WAAAA,EAAYK,iBAAAA,GAEnE,K,mECtDe,SAASO,IACpB,OACIC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAEX,C,4ECFe,SAASC,EAAU3C,GAAW,IAAT4C,EAAM5C,EAAN4C,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACIF,GAAUA,EAAOvB,OAAS,IAClBoB,EAAAA,EAAAA,KAAA,MAAAC,SACKE,EAAOG,KAAI,SAACC,GAAK,OACdP,EAAAA,EAAAA,KAAA,MAAAC,UAAmBD,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAzC,OAAauC,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,EAASS,SAAWT,EAASU,QAASb,SAAEM,EAAMQ,SAAxGR,EAAMG,GAAoH,KAI3J,C,wJCZe,SAASM,EAAUzD,GAAkB,IAAhB0D,EAAY1D,EAAZ0D,aAsBhC,OACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,GAAGC,SArBE,SAAAC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTV,EAASO,EAAEG,cAAcV,OAAOW,MACtCC,QAAQC,IAAI,WAAYb,GAIX,KAAVA,IAIHG,EAAaH,EAAOc,eACpBL,EAAKM,QAKT,EAGkD5B,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,SAAO8B,KAAK,SAASC,KAAK,UAC1B/B,EAAAA,EAAAA,KAAA,UAAQ+B,KAAK,SAAQ9B,SAAC,aAGlC,C,aCrBe,SAAS+B,IAEpB,IAAQxC,EAAqBM,EAAAA,EAAAA,iBAE7BmC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GAInBI,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAAnCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAaC,EAAAA,EAAAA,MAIb/C,GAAWC,EAAAA,EAAAA,MACjBqB,QAAQC,IAAI,oBAAqBvB,GAGjC,IAAMgD,EAAUjB,EAAakB,IAAI,SACjC3B,QAAQC,IAAI,sBAAuByB,IAKnCE,EAAAA,EAAAA,YAAW,WAEP,GAAe,OAAZF,EAAH,CAIA,IAAMG,EAAc,eAAAhG,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8F,EAAAC,EAAA,OAAAhG,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACD,OAAlBmF,GAAa,GAAKrF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAES0B,EAAiB4D,GAAQ,OAAAI,EAAA5F,EAAAK,KAAxCwF,EAAID,EAAJC,KACRhB,GAAc,OAAJgB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UAAW,IAAG9F,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA+F,GAAA/F,EAAA,SAE9BiF,EAASjF,EAAA+F,GAAMC,SAAW,yBAAwB,QAE/B,OAF+BhG,EAAAC,KAAA,GAElDoF,GAAa,GAAMrF,EAAAiG,OAAA,6BAAAjG,EAAAO,OAAA,GAAAT,EAAA,wBAE1B,kBAVmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAYpBkF,GAdA,CAgBJ,GAAG,CAACH,EAAS5D,IASb,OAAIoD,GAAc1B,EAAAA,EAAAA,MAAA,KAAAjB,SAAA,CAAG,UAAQ2C,MAGzB1B,EAAAA,EAAAA,MAAA,QAAAjB,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAACgB,EAAU,CAACC,aAZD,SAAA6C,GACXV,IAAYU,GACdZ,EAAW,CAAEpC,OAAO,SAAD9C,OAAW8F,IAElC,IASOd,GAAYhD,EAAAA,EAAAA,KAACD,EAAAA,EAAO,KACrBC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CAACC,OAAQqC,MAIhC,C","sources":["api/api.js","components/Loader.js","components/MoviesList.js","components/SearchForm.js","pages/Movies.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/'\nconst API_KEY = '?api_key=164eadb7baae3a4c5cb507a1aca52aae';\n\n//?api_key=${API_KEY}`\n\n//993710?api_key=164eadb7baae3a4c5cb507a1aca52aae\n//420818?api_key=164eadb7baae3a4c5cb507a1aca52aae\n\n//https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n//https://api.themoviedb.org/3/trending/movie/{time_window}\n\nconst fetchTranding = async () => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day${API_KEY}`)\n    //console.log('reso: ',response);\n    return response\n}\n\nconst fetchMovie = async (movie_id = '') => {\n\n    const response = await axios.get(`${BASE_URL + movie_id}${API_KEY}`)\n\n    return response\n\n}\n\n\nconst fetchReviews = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/reviews${API_KEY}`)\n\n    //console.log('resp: ', response?.data);\n\n    return response\n}\nconst fetchCasts = async (movie_id = '') => {\n    const response = await axios.get(`${BASE_URL + movie_id}/credits${API_KEY}`)\n    //console.log('resp: ', response?.data);\n\n    return response\n}\n\nconst fetchMovieSearch = async (query) => {\n\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie${API_KEY}&query=${query}`)\n\n    //console.log('resp:',response);\n    return response\n}\n\n\nconst api = { fetchTranding, fetchMovie, fetchReviews, fetchCasts, fetchMovieSearch }\n\nexport default api","export default function Loading(){\n    return(\n        <p>Loading ...</p>\n    )\n}","import { Link, useLocation } from \"react-router-dom\"\n\nexport default function MoviesList({movies}){\n    const location = useLocation()\n\n    return(\n        movies && movies.length > 0 &&\n                <ul>\n                    {movies.map((movie) => (\n                        <li key={movie.id}><Link to={`/movies/${movie.id}`} state={{ from: location.pathname + location.search }}>{movie.title}</Link></li>\n                    ))}\n                </ul>\n    )\n}","\nexport default function SearchForm({onGetRequest}) {\n\n    const handleSubmitForm = e => {\n        e.preventDefault()\n        const form = e.currentTarget;\n        const search = e.currentTarget.search.value\n        console.log('search: ', search)\n        //setSearch(search)\n        //setSearchParams({ query: search })\n        \n        if(search ===''){\n            return\n        }\n        \n        onGetRequest(search.toLowerCase())\n        form.reset()\n\n        // if(search !==''){\n        //     getMovieSearch(search)\n        // }\n    }\n\n    return (\n        <form className=\"\" onSubmit={handleSubmitForm}>\n            <input name=\"search\" type=\"text\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { useNavigate, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport api from \"api/api\";\nimport Loading from \"components/Loader\";\nimport SearchForm from \"components/SearchForm\";\nimport MoviesList from \"components/MoviesList\";\n\nexport default function Movies() {\n\n    const { fetchMovieSearch } = api\n\n    const [searchParams] = useSearchParams();\n\n    \n\n    const [result, setResult] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n    const navigation = useNavigate();\n\n    //console.log('nav: ', navigation);\n    \n    const location = useLocation()\n    console.log('location movies: ', location);\n\n    \n    const request = searchParams.get('query');\n    console.log('request on Movies: ', request);\n    \n\n\n\n    useEffect (()=> {\n\n        if(request === null){\n            return\n        }\n\n        const getMovieSearch = async () => {\n            setIsLoading(true)\n            try {\n                const { data } = await fetchMovieSearch(request)\n                setResult(data?.results || [])\n            } catch (error) {\n                setError(error.message || \"Something went wrong.\")\n            } finally {\n                setIsLoading(false)\n            }\n        }\n\n        getMovieSearch()\n        \n    }, [request, fetchMovieSearch] )\n\n    const addRequest = newRequest => {\n        if (request !== newRequest) {\n          navigation({ search: `query=${newRequest}` });\n        }\n      };\n\n\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <main>\n            <h1>Movies</h1>\n            <SearchForm onGetRequest={addRequest} />\n            {isLoading ? <Loading /> :\n            <MoviesList movies={result} />\n            }\n        </main>\n    )\n}"],"names":["BASE_URL","API_KEY","fetchTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchMovie","_ref2","_callee2","movie_id","_args2","_context2","length","undefined","fetchReviews","_ref3","_callee3","_args3","_context3","fetchCasts","_ref4","_callee4","_args4","_context4","fetchMovieSearch","_ref5","_callee5","query","_context5","_x","api","Loading","_jsx","children","MoviesList","movies","location","useLocation","map","movie","Link","to","id","state","from","pathname","search","title","SearchForm","onGetRequest","_jsxs","className","onSubmit","e","preventDefault","form","currentTarget","value","console","log","toLowerCase","reset","name","type","Movies","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","_useState2","result","setResult","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","navigation","useNavigate","request","get","useEffect","getMovieSearch","_yield$fetchMovieSear","data","results","t0","message","finish","newRequest"],"sourceRoot":""}